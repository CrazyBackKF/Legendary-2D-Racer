8.02.2025
- stworzenie projektu
- dodanie do pliku 'index.html' znacznik `<canvas>` i zainkludowanie pliku 'script.js'
- zainicjowanie zmiennych odnoszących się do znacznika `<canvas>`
- ustalenie wysokości i szerokości znacznika zgodnie z wielkościami przeglądarki
- usunięcie marginesu w znaczniku `<body>`
- stworzenie pętli gry ['animate()']
- dodanie 'addEventListener' odpowiedzialnego za ciągłą zmianę wielkości znacznika `<canvas>`
- stworzenie klasy 'Player'
- stworzenie obiektu gracza
- stworzenie funkcji w klasie 'Player' ['constructor()', 'update()', 'draw()', 'turn()', 'accelerate()', 'physics()']
- obsługa przycisków
- stworzenie funkcji zmieniającej stopnie na radiany [używane w funkcji 'rotate()']
- rozdzielenie klasy do innego pliku
- przeniesienie funkcji do osobnego pliku
- podłączenie nowych plików do pliku 'index.html'
- dodanie ograniczenia prędkości pojazdu
- dodanie zmiany szybkości obracania pojazdu względem prędkości
- naprawienie szybkości obrotu (nie działało jeżdżąc do tyłu)
- usunięcie zmiennej 'lastDirection' i zastąpienie jej innymi warunkami z użyciem 'this.speed'
- zoptymalizowanie zmiany zmiennej 'this.speed' ('this.speedValue' zmienia prędkość na podstawie przycisków, 'this.friction' jeżeli nie klikamy "w" lub "s" zwalnia o jej wartość)

9.02.2025
- naprawa zmiany szybkości obrotu [były złe znaki co mogło spowodować później błędy]
- zmiana wartości 'this.speedValue' i 'this.friction'
- poprawa hamowania i zwiększania prędkości
- poprawa obrotu
- dodanie komentarzy
- dodanie turbo
- poprawa turbo
- płynniejsza zmiana prędkości po turbo

10.02.2025
- dodanie driftu
- zmiana mechaniki skrętu

12.02.2025
- poprawa wielkości znacznika `<canvas>` aby było stałe
- później będzie fullscreen
- dodanie tła na etap 1 jako plik .tmx1
- przetransformowanie pliku .tmx do tablicy w pliku .js

13.02.2025
- stworzenie klasy na hitboxy kolizji
- wyskalowanie do mapy (mapa będzie się przesuwać wraz z graczem)
- dodanie pierwotnej wersji funkcji 'checkCollisions'
- stworzenie funkcji która zwraca cały warunek sprawdzania kolizji
- podłączenie obu plików (classes.js i collisionsBlock.js)
- zmienienie tablicy z mapą na dwuwymiarową (pozycja x i y)
- dodanie mechaniki rysowania hitboxów na tło i skalowanie wielkości i pozycji zgodnie do mapy

14.02.2025
- zmiana parametrów obiektu 'car' i 'collision' z nazwą włącznie
- dodanie pliku collisionDetected
- stworzenie funkcji obliczającej rogi obiektu
- stworzenie funkcji sprawdzającej czy jakiś z tych punktów jest zawarty w drugim obiekcie
- podłączenie 'collisionDetected.js'
- poprawa warunku w funkcji 'checkCollisions' aby była zgodna z nowo powstałym plikiem
- poprawa 'c.translate' aby była bardziej optymalna
- dodanie bool'a sprawdzającego czy jest kolizja
- dodanie obiektu 'lastSafePosition'
- poprawa warunków w funkcji 'turn' w klasie 'Player'
- dodanie nowego set'u 'collidingCorners'
- stworzenie funkcji 'horizontalsCollisions'
- dodanie warunku zmieniającego kąt padania po kolizji
- początkowa wersja działania kolizji (auto się zatrzymuje)
- zrobienie 'if' który wykonuje 'horizontalsCollisions' gdy kolizja występuje
- zmiana nazwy argumentu w 'collisionDetected.js'
- poprawa zwracania wierzchołka (jeśli występuje kolizja zwraca nazwę wierzchołka z kolizją)
- kolejna poprawa wielkości canvasa

16.02.2025
- przemodelowanie 'horizontalsCollisions'
- dodanie rozbudowanego 'if'a sprawdzającego czy jest kolizja na rogach, jeżeli tak to sprawdza gdzie dokładnie i odbija samochód (dodaje prędkość z przeciwnym znakiem)
- dodanie 'else if' sprawdzającego kolizję pośrodku punktów, też odbija samochód
- zmiana wartości 'angle' (obrócenie samochodu po uderzeniu)
- dodanie funkcji która return'uje kierunek
- stworzenie funkcji która obraca samochód
- optymalizacja

17.02.2025
- usunięcie funkcji dodanych wczoraj w 'collisionDetected', były błędne i trudne do ogarnięcia
- usunięcie funkcji odpowiedzialnej za reakcję na kolizję i poprawa na bardziej płynną
- usunięcie set'a
- dodanie bool'i
- poprawa wartości obiektów auta i bloku, aby były bardziej optymalne i dokładne do używania w funkcjach
- wykrywanie kolizji (tylko bool)
- dodanie rogów hitboxa (przeciw działanie możliwym bug'om ze kolizja jakoś nie będzie wykrywana)
-dodanie ruchu kamery
